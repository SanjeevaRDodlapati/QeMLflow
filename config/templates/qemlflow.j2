# ðŸ”§ QeMLflow Base Configuration Template
# Generated at: {{ timestamp }}
# Environment: {{ environment }}
# Configuration Root: {{ config_root }}

# =============================================================================
# APPLICATION CONFIGURATION
# =============================================================================
application:
  name: "{{ application_name | default('QeMLflow Enterprise Platform') }}"
  version: "{{ application_version | default('2.0.0') }}"
  environment: "{{ environment }}"
  debug: {{ debug | default(environment == 'development') | tojsonfilter }}
  log_level: "{{ log_level | default('INFO' if environment == 'production' else 'DEBUG') }}"
  
  # Application metadata
  metadata:
    created_at: "{{ timestamp }}"
    config_version: "{{ config_version | default('v1.0.0') }}"
    build_hash: "{{ build_hash | default('latest') }}"

# =============================================================================
# ENVIRONMENT-SPECIFIC SETTINGS
# =============================================================================
{% if environment == 'development' %}
development:
  hot_reload: true
  auto_restart: true
  profiling: true
  debug_toolbar: true
  mock_external_apis: true
  
{% elif environment == 'testing' %}
testing:
  isolated_db: true
  mock_services: true
  test_data_cleanup: true
  parallel_testing: true
  coverage_reporting: true
  
{% elif environment == 'staging' %}
staging:
  production_like: true
  monitoring_enabled: true
  load_testing: true
  integration_testing: true
  performance_profiling: true
  
{% elif environment == 'production' %}
production:
  high_availability: true
  auto_scaling: true
  comprehensive_monitoring: true
  security_hardened: true
  performance_optimized: true
{% endif %}

# =============================================================================
# SECURITY CONFIGURATION
# =============================================================================
security:
  authentication:
    enabled: {{ security_auth_enabled | default(environment != 'development') | tojsonfilter }}
    method: "{{ auth_method | default('oauth2') }}"
    token_expiry: {{ token_expiry | default(3600) }}
  
  authorization:
    rbac_enabled: {{ rbac_enabled | default(environment in ['staging', 'production']) | tojsonfilter }}
    default_role: "{{ default_role | default('user') }}"
    admin_users: {{ admin_users | default([]) | list }}
  
  encryption:
    data_at_rest: {{ encrypt_at_rest | default(environment in ['staging', 'production']) | tojsonfilter }}
    data_in_transit: {{ encrypt_in_transit | default(environment != 'development') | tojsonfilter }}
    algorithm: "{{ encryption_algorithm | default('AES-256-GCM') }}"
  
  session:
    secure_cookies: {{ secure_cookies | default(environment != 'development') | tojsonfilter }}
    same_site: "{{ same_site_policy | default('strict') }}"
    max_age: {{ session_max_age | default(3600) }}

# =============================================================================
# DATABASE CONFIGURATION  
# =============================================================================
database:
  {% if environment == 'development' %}
  url: "{{ database_url | default('sqlite:///development.db') }}"
  echo: true
  pool_size: 5
  {% elif environment == 'testing' %}
  url: "{{ database_url | default('sqlite:///:memory:') }}"
  echo: false
  pool_size: 1
  {% else %}
  url: "{{ database_url | default('postgresql://user:pass@localhost/qemlflow') }}"
  echo: false
  pool_size: {{ db_pool_size | default(20) }}
  max_overflow: {{ db_max_overflow | default(10) }}
  pool_timeout: {{ db_pool_timeout | default(30) }}
  {% endif %}
  
  # Connection settings
  connect_args:
    {% if environment == 'production' %}
    sslmode: "require"
    application_name: "qemlflow-{{ environment }}"
    {% endif %}
    check_same_thread: false

# =============================================================================
# PERFORMANCE CONFIGURATION
# =============================================================================
performance:
  workers: {{ workers | default(4 if environment == 'production' else 2) }}
  max_connections: {{ max_connections | default(1000 if environment == 'production' else 100) }}
  timeout: {{ request_timeout | default(30) }}
  keep_alive: {{ keep_alive | default(2) }}
  
  cache:
    enabled: {{ cache_enabled | default(environment in ['staging', 'production']) | tojsonfilter }}
    backend: "{{ cache_backend | default('redis' if environment == 'production' else 'memory') }}"
    ttl: {{ cache_ttl | default(3600) }}
    max_size: "{{ cache_max_size | default('1GB' if environment == 'production' else '100MB') }}"
  
  # Performance optimizations
  optimizations:
    lazy_loading: {{ lazy_loading | default(true) | tojsonfilter }}
    connection_pooling: {{ connection_pooling | default(environment != 'development') | tojsonfilter }}
    query_caching: {{ query_caching | default(environment in ['staging', 'production']) | tojsonfilter }}
    static_file_caching: {{ static_caching | default(environment != 'development') | tojsonfilter }}

# =============================================================================
# MONITORING CONFIGURATION
# =============================================================================
monitoring:
  metrics:
    enabled: {{ metrics_enabled | default(true) | tojsonfilter }}
    port: {{ metrics_port | default(8080) }}
    path: "{{ metrics_path | default('/metrics') }}"
    
  health_checks:
    enabled: {{ health_checks_enabled | default(true) | tojsonfilter }}
    interval: {{ health_check_interval | default(30) }}
    timeout: {{ health_check_timeout | default(10) }}
    
  logging:
    format: "{{ log_format | default('json' if environment == 'production' else 'text') }}"
    level: "{{ log_level | default('INFO' if environment == 'production' else 'DEBUG') }}"
    rotation: "{{ log_rotation | default('daily') }}"
    max_size: "{{ log_max_size | default('100MB') }}"
    retention_days: {{ log_retention_days | default(30 if environment == 'production' else 7) }}

# =============================================================================
# RESOURCE LIMITS
# =============================================================================
resources:
  memory:
    limit: "{{ memory_limit | default('2GB' if environment == 'production' else '1GB') }}"
    warning_threshold: {{ memory_warning_threshold | default(0.8) }}
    
  cpu:
    limit: "{{ cpu_limit | default('2.0' if environment == 'production' else '1.0') }}"
    warning_threshold: {{ cpu_warning_threshold | default(0.8) }}
    
  disk:
    limit: "{{ disk_limit | default('10GB' if environment == 'production' else '5GB') }}"
    warning_threshold: {{ disk_warning_threshold | default(0.9) }}

# =============================================================================
# SCIENTIFIC COMPUTING CONFIGURATION
# =============================================================================
scientific:
  # Experiment tracking
  experiment_tracking:
    enabled: {{ experiment_tracking_enabled | default(true) | tojsonfilter }}
    backend: "{{ experiment_backend | default('mlflow') }}"
    auto_log: {{ auto_log_experiments | default(environment != 'testing') | tojsonfilter }}
    
  # Model optimization
  model_optimization:
    parallel_training: {{ parallel_training | default(environment in ['staging', 'production']) | tojsonfilter }}
    gpu_acceleration: {{ gpu_acceleration | default(false) | tojsonfilter }}
    memory_optimization: {{ memory_optimization | default(true) | tojsonfilter }}
    
  # Quantum computing
  quantum:
    enabled: {{ quantum_enabled | default(false) | tojsonfilter }}
    backend: "{{ quantum_backend | default('qiskit') }}"
    simulator: {{ quantum_simulator | default(environment != 'production') | tojsonfilter }}

# =============================================================================
# EXTERNAL SERVICES
# =============================================================================
external_services:
  # Redis (if using)
  {% if cache_backend == 'redis' or environment in ['staging', 'production'] %}
  redis:
    url: "{{ redis_url | default('redis://localhost:6379/0') }}"
    pool_size: {{ redis_pool_size | default(10) }}
    timeout: {{ redis_timeout | default(5) }}
  {% endif %}
  
  # Message queue
  {% if environment in ['staging', 'production'] %}
  message_queue:
    backend: "{{ mq_backend | default('celery') }}"
    broker_url: "{{ broker_url | default('redis://localhost:6379/1') }}"
    result_backend: "{{ result_backend | default('redis://localhost:6379/2') }}"
  {% endif %}

# =============================================================================
# FEATURE FLAGS
# =============================================================================
features:
  new_ui: {{ feature_new_ui | default(environment == 'development') | tojsonfilter }}
  advanced_analytics: {{ feature_advanced_analytics | default(environment in ['staging', 'production']) | tojsonfilter }}
  experimental_algorithms: {{ feature_experimental_algorithms | default(environment == 'development') | tojsonfilter }}
  api_v2: {{ feature_api_v2 | default(false) | tojsonfilter }}

# =============================================================================
# CUSTOM CONFIGURATION
# =============================================================================
{% if custom_config %}
custom:
{{ custom_config | to_nice_yaml | indent(2, True) }}
{% endif %}
