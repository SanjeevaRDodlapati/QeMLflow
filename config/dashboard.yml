# Dashboard & Reporting Configuration
# This file configures the comprehensive monitoring dashboard system,
# automated reporting, trend analysis, and performance benchmarking.

dashboard:
  # Dashboard system settings
  storage_dir: "dashboard_data"
  chart_output_dir: "dashboard_charts" 
  template_dir: "templates"
  report_output_dir: "reports"
  
  # Default refresh intervals (seconds)
  default_widget_refresh: 60
  dashboard_refresh: 300
  
  # Chart generation settings
  chart_format: "html"  # html, png, svg
  chart_width: 800
  chart_height: 600
  enable_interactive_charts: true
  
  # Data retention
  data_retention_days: 90
  chart_retention_days: 30
  report_retention_days: 365

data_sources:
  # Monitoring data source
  monitoring:
    type: "MonitoringDataSource"
    storage_dir: "metrics_data"
    default_aggregation: "avg"
    supported_time_ranges:
      - "1h"
      - "6h" 
      - "24h"
      - "7d"
      - "30d"
  
  # Code health data source
  code_health:
    type: "CodeHealthDataSource"
    storage_dir: "code_health"
    metrics:
      - "technical_debt"
      - "code_quality"
      - "complexity"
      - "test_coverage"
  
  # Usage analytics data source
  usage_analytics:
    type: "UsageAnalyticsDataSource"
    storage_dir: "usage_analytics"
    session_timeout: 1800  # 30 minutes
    behavior_analysis: true

widgets:
  # Default widget configurations
  defaults:
    chart:
      width: 400
      height: 300
      refresh_interval: 60
      analyze_trends: true
      trend_period: "24h"
    
    metric:
      width: 200
      height: 150
      refresh_interval: 30
      show_change: true
      threshold_alerts: true
    
    table:
      width: 600
      height: 400
      refresh_interval: 120
      max_rows: 100
      sortable: true
    
    alert:
      width: 300
      height: 100
      refresh_interval: 15
      auto_acknowledge: false

dashboards:
  # Pre-configured dashboards
  system_overview:
    name: "System Overview"
    description: "High-level system health and performance metrics"
    widgets:
      - type: "metric"
        title: "CPU Usage"
        data_source: "monitoring"
        query:
          metric_type: "system_cpu"
          time_range: "1h"
          aggregation: "avg"
        position: {row: 0, col: 0, width: 1, height: 1}
      
      - type: "metric"
        title: "Memory Usage"
        data_source: "monitoring"
        query:
          metric_type: "system_memory"
          time_range: "1h"
          aggregation: "avg"
        position: {row: 0, col: 1, width: 1, height: 1}
      
      - type: "chart"
        title: "Response Time Trend"
        data_source: "monitoring"
        chart_type: "line"
        query:
          metric_type: "response_time"
          time_range: "24h"
          aggregation: "avg"
        position: {row: 1, col: 0, width: 2, height: 1}
      
      - type: "chart"
        title: "Error Rate"
        data_source: "monitoring"
        chart_type: "line"
        query:
          metric_type: "error_rate"
          time_range: "24h"
          aggregation: "sum"
        position: {row: 2, col: 0, width: 2, height: 1}
  
  code_quality:
    name: "Code Quality Dashboard"
    description: "Code health metrics and technical debt tracking"
    widgets:
      - type: "metric"
        title: "Technical Debt Items"
        data_source: "code_health"
        query:
          metric_type: "technical_debt_count"
        position: {row: 0, col: 0, width: 1, height: 1}
      
      - type: "metric"
        title: "Code Quality Score"
        data_source: "code_health"
        query:
          metric_type: "quality_score"
        position: {row: 0, col: 1, width: 1, height: 1}
      
      - type: "chart"
        title: "Complexity Distribution"
        data_source: "code_health"
        chart_type: "histogram"
        query:
          metric_type: "complexity_distribution"
        position: {row: 1, col: 0, width: 2, height: 1}
  
  usage_insights:
    name: "Usage Analytics"
    description: "Feature usage and user behavior insights"
    widgets:
      - type: "metric"
        title: "Active Users"
        data_source: "usage_analytics"
        query:
          metric_type: "active_users"
          time_range: "24h"
        position: {row: 0, col: 0, width: 1, height: 1}
      
      - type: "chart"
        title: "Feature Usage"
        data_source: "usage_analytics"
        chart_type: "bar"
        query:
          metric_type: "feature_usage"
          time_range: "7d"
        position: {row: 1, col: 0, width: 2, height: 1}

trend_analysis:
  # Trend analysis configuration
  enabled: true
  algorithms:
    - "linear_regression"
    - "moving_average"
    - "seasonal_decomposition"
  
  # Anomaly detection
  anomaly_detection:
    enabled: true
    sensitivity: 0.8  # 0.0 to 1.0
    methods:
      - "statistical_outliers"
      - "isolation_forest"
    
  # Prediction settings
  prediction:
    enabled: true
    forecast_periods: 24  # hours
    confidence_level: 0.95

reporting:
  # Automated reporting configuration
  enabled: true
  
  # Report schedules
  schedules:
    daily_summary:
      frequency: "daily"
      time: "09:00"
      report_type: "system_summary"
      format: "html"
      recipients:
        - "admin@example.com"
      
    weekly_health:
      frequency: "weekly"
      day: "monday"
      time: "08:00"
      report_type: "code_health"
      format: "pdf"
      recipients:
        - "dev-team@example.com"
      
    monthly_analytics:
      frequency: "monthly"
      day: 1
      time: "10:00"
      report_type: "usage_analytics"
      format: "html"
      recipients:
        - "product@example.com"
  
  # Report templates
  templates:
    system_summary:
      title: "Daily System Summary"
      sections:
        - "performance_metrics"
        - "error_summary"
        - "alert_summary"
        - "system_health"
    
    code_health:
      title: "Weekly Code Health Report"
      sections:
        - "technical_debt_summary"
        - "quality_trends"
        - "complexity_analysis"
        - "maintenance_recommendations"
    
    usage_analytics:
      title: "Monthly Usage Analytics"
      sections:
        - "user_activity"
        - "feature_adoption"
        - "performance_insights"
        - "behavior_patterns"

performance_benchmarking:
  # Performance benchmarking configuration
  enabled: true
  
  # Benchmark categories
  benchmarks:
    system_performance:
      metrics:
        - "response_time"
        - "throughput"
        - "resource_utilization"
      thresholds:
        response_time_p95: 1000  # milliseconds
        throughput_min: 100  # requests/second
        cpu_usage_max: 80  # percentage
        memory_usage_max: 85  # percentage
    
    code_quality:
      metrics:
        - "technical_debt_ratio"
        - "code_coverage"
        - "complexity_score"
      thresholds:
        debt_ratio_max: 0.1  # 10%
        coverage_min: 80  # percentage
        complexity_max: 10  # cyclomatic complexity
    
    user_experience:
      metrics:
        - "feature_usage_rate"
        - "error_frequency"
        - "session_duration"
      thresholds:
        usage_rate_min: 0.5  # 50%
        error_rate_max: 0.01  # 1%
        session_duration_target: 600  # seconds
  
  # Baseline comparison
  baseline:
    enabled: true
    update_frequency: "weekly"
    comparison_periods:
      - "previous_week"
      - "previous_month"
      - "previous_quarter"

alerts:
  # Dashboard-specific alerts
  enabled: true
  
  # Alert rules
  rules:
    dashboard_offline:
      condition: "dashboard_unavailable"
      threshold: 300  # seconds
      severity: "critical"
    
    widget_error_rate:
      condition: "widget_errors > threshold"
      threshold: 0.1  # 10% error rate
      severity: "warning"
    
    data_staleness:
      condition: "data_age > threshold"
      threshold: 3600  # 1 hour
      severity: "warning"
  
  # Notification channels
  notifications:
    email:
      enabled: true
      smtp_server: "localhost:587"
      from_address: "dashboard@qemlflow.com"
    
    webhook:
      enabled: false
      url: "https://hooks.slack.com/services/..."
    
    log:
      enabled: true
      log_level: "WARNING"

# Logging configuration
logging:
  level: "INFO"
  format: "%(asctime)s - %(name)s - %(levelname)s - %(message)s"
  handlers:
    - type: "file"
      filename: "dashboard.log"
      max_bytes: 10485760  # 10MB
      backup_count: 5
    - type: "console"
      level: "INFO"
